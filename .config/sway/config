# DO NOT EDIT. This file is generated. Changes will be lost.
# Edit configs in ~/tiling/config.d/*.conf instead.

# track session type
exec_always ~/.scripts/mark-session-type.sh sway
# default mod key = win/super
set $mod Mod4

# alternative mod key = right control
set $rctrl Mod3

# default workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
# custom keyboard layout to swap right control to mod3
input type:keyboard {
    xkb_layout "us"
    xkb_variant "rctrl_mod3"
}
# waybar
bar {
    swaybar_command waybar
}
# fonts
font pango:monospace 14
font pango:Dank Mono 14
# dunst notification daemon
exec --no-startup-id dunst

# set default screen layout on load and refresh
exec_always ~/.screenlayout/default.sh

# random wallpaper script 
exec_always ~/.scripts/random-wallpaper.sh

# systemd timer to change the wallpaper on a 10 minute interval
exec --no-startup-id systemd-run --on-calendar="*:0/10" --user -- ~/.scripts/random-wallpaper.sh

# reset keyboard layout on reload
exec_always ~/.scripts/swap-win-alt.sh OFF
# sway overview
exec rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov
# gaps
smart_gaps on
gaps inner 8
gaps outer 0
# disable titlebar
default_border pixel 0
# terminal
bindsym $mod+Return exec kitty

# rofi window switcher
bindsym $mod+Tab exec --no-startup-id rofi -modi window -show window

# rofi emoji picker
bindsym $mod+period exec --no-startup-id rofimoji
# rofi dmenu (TODO: wayland)
bindsym $mod+space exec --no-startup-id rofi -show drun
# restart sway in place
bindsym $mod+Shift+r exec "~/.scripts/tiling-config-init.sh; swaymsg reload"
# dunst notification exit nag
bindsym $mod+Shift+e mode "exitnag"; exec dunstify -p -u critical "Are you sure you want to exit? Mod+Shift+Escape to confirm. Escape/Enter to cancel." > /tmp/exitnag
mode "exitnag" {
        bindsym Escape mode "default"; exec dunstify -C $(cat /tmp/exitnag) && rm /tmp/exitnag
        bindsym Return mode "default"; exec dunstify -C $(cat /tmp/exitnag) && rm /tmp/exitnag
        bindsym $mod+shift+Escape exit
}
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+Shift+BackSpace floating toggle

# change focus between tiling / floating windows
bindsym $mod+BackSpace focus mode_toggle
# toggle keyboard layout (swap alt/win keys)
bindsym Control+Shift+Escape exec ~/.scripts/swap-win-alt.sh TOGGLE
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return exec dunstify -u low "Resize mode disabled."; mode "default"
        bindsym Escape exec dunstify -u low "Resize mode disabled."; mode "default"
        bindsym $mod+r exec dunstify -u low "Resize mode disabled."; mode "default"
}

bindsym $mod+r exec dunstify -u low "Resize mode enabled."; mode "resize"
# screenshots
bindsym Print exec grim - | wl-copy
bindsym $mod+Print exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
bindsym $mod+Shift+s exec grim -g "$(slurp)" - | wl-copy
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# cycle workspaces on current output
bindsym $rctrl+Left workspace prev_on_output
bindsym $rctrl+Right workspace next_on_output

# move workspace to other monitor
bindsym $rctrl+Shift+Left move workspace to output left
bindsym $rctrl+Shift+Right move workspace to output right
# switch to workspace
bindsym --no-repeat $mod+1 workspace number $ws1; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+2 workspace number $ws2; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+3 workspace number $ws3; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+4 workspace number $ws4; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+5 workspace number $ws5; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+6 workspace number $ws6; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+7 workspace number $ws7; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+8 workspace number $ws8; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+9 workspace number $ws9; exec "echo 1 > /tmp/sovpipe"
bindsym --no-repeat $mod+0 workspace number $ws10; exec "echo 1 > /tmp/sovpipe"

bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"